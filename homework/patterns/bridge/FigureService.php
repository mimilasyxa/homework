<?php

class FigureService
{
    public function paintFigure()
    {
        $redSquare = new Square(new RedColor());
        $redSquare->getColor(); // получаем красный квадрат

        $blueSquare = new Square(new RedColor());
        $blueSquare->getColor(); // получаем синий квадрат

        $redTriangle = new Triangle(new RedColor());
        $redTriangle->getColor(); //получаем красный треугольник

        $blueTriangle = new Triangle(new BlueColor());
        $blueTriangle->getColor(); //получаем синий треугольник

    }
}

/*
 * Проблема: Расширяя класс нам придётся создавать новые классы, для создания работы с фигурами и их цветом нужно будет создать фигуры*цвет классов
 * Используя интерфейсы мы можем передавать в класс класс использующий общий интерфейс (синий и красный используют интерфейс цвет)
 *
 *
 * это структурный паттерн проектирования, который позволяет нам отделить абстракции от реализаций и
 * сделать их независимыми друг от друга. В результате абстракции и реализации могут разрабатываться как отдельные сущности.
 *
 *
 *
 */